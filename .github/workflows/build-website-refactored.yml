# .github/workflows/build-and-deploy-website-refactored.yml
name: Build & Deploy website-refactored on push

on:
  push:
    paths:
      - 'website-refactored/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: website-refactored

    steps:
      # 1. Checkout your code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js v20
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Cache Yarn dependencies
      - name: Cache node modules and Yarn cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 4. Install dependencies
      - name: Install dependencies
        run: yarn install

      # 5. Build the project
      - name: Build the project
        run: yarn build

      # 6. Load your SSH key into the agent
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DWIKIS_REMOTE_SERVER }}

      # 7. Trust the remote serverâ€™s host key
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 172.191.104.156 >> ~/.ssh/known_hosts

      # 8. Sync built files to your server using SCP
      - name: Sync built files to server
        run: |
          scp -o StrictHostKeyChecking=no -r ./build/* azureuser@172.191.104.156:~/Discord-Wiki/website-refactored/build/

      # 9. SSH in, kill old processes, and start production
      - name: Restart server process
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@172.191.104.156 << 'EOF'
            cd ~/Discord-Wiki/website-refactored

            # Stop any existing production processes
            pkill -f 'concurrently' || true
            pkill -f 'serve -s build' || true
            pkill -f 'gunicorn' || true

            # Start frontend + API in production in the background,
            # detaching the process so it doesn't block the SSH session.
            nohup yarn --ignore-engines start-both-prod > output.log 2>&1 & disown
          EOF
